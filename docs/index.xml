<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Liripo</title>
<link>https://liripo.github.io/index.html</link>
<atom:link href="https://liripo.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Liripo Blog</description>
<generator>quarto-1.3.353</generator>
<lastBuildDate>Mon, 01 Jan 2024 16:00:00 GMT</lastBuildDate>
<item>
  <title>quarto 创建博客</title>
  <dc:creator>Liripo </dc:creator>
  <link>https://liripo.github.io/posts/quarto_blog/index.html</link>
  <description><![CDATA[ 




<section id="使用-quarto-创建自己的博客" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="使用-quarto-创建自己的博客"><span class="header-section-number">1</span> 使用 quarto 创建自己的博客</h2>
<section id="quarto的简单介绍" class="level3" data-number="1.1">
<h3 data-number="1.1" class="anchored" data-anchor-id="quarto的简单介绍"><span class="header-section-number">1.1</span> quarto的简单介绍</h3>
<p><a href="https://quarto.org/">Quarto®</a> 是在一款建立在pandoc上的开源的科学与技术排版系统，可以进行包含Python、R 、Julia、或 bash 等代码的自动化报告工作。</p>
</section>
<section id="安装-quarto" class="level3" data-number="1.2">
<h3 data-number="1.2" class="anchored" data-anchor-id="安装-quarto"><span class="header-section-number">1.2</span> 安装 quarto</h3>
<p>这里推荐两个选择：</p>
<ol type="1">
<li><p>按照<a href="https://quarto.org/docs/get-started/">官网</a> 介绍下载安装即可。</p></li>
<li><p>选择一个带 <code>quarto</code> 的 <code>docker</code> 镜像，我比较喜欢使用的是 <a href="https://rocker-project.org/images/versioned/rstudio.html">rocker</a> 项目的 <code>tidyverse</code>镜像。<code>tidyverse</code>镜像的基础镜像是<code>rstudio</code> 镜像，而目前新版本的<code>rstudio</code> 都会包含 <code>quarto</code> 软件。</p></li>
</ol>
<blockquote class="blockquote">
<p>ps: 我选择此镜像是顺便作为 R 方面开发的基础镜像。</p>
</blockquote>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pull 镜像</span></span>
<span id="cb1-2">docker pull rocker<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>tidyverse<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>latest</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 运行, 挂载自己本地的路径，我习惯将整个D盘挂载到镜像中。</span></span>
<span id="cb1-4">docker run <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>d <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ti <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>p <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8787</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8787</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>e ROOT<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>e PASSWORD<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>《你的密码》 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>v 《本地路径，可以整个D盘》<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>《镜像目录》 rocker<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>tidyverse</span></code></pre></div>
<p>这样，你就可以直接打开浏览器，输入网址 <a href="localhost:8787">localhost:8787</a> 开启 Rstudio IDE。 默认用户名：rstudio <img src="https://liripo.github.io/posts/quarto_blog/rstudio.png" class="img-fluid"></p>
</section>
<section id="quarto-创建-blog的详细步骤" class="level3" data-number="1.3">
<h3 data-number="1.3" class="anchored" data-anchor-id="quarto-创建-blog的详细步骤"><span class="header-section-number">1.3</span> quarto 创建 blog的详细步骤</h3>
<blockquote class="blockquote">
<p>没什么资源比官网的步骤更详细了</p>
</blockquote>
<p><a href="https://quarto.org/docs/websites/website-blog.html" class="uri">https://quarto.org/docs/websites/website-blog.html</a></p>
</section>
<section id="发布博客" class="level3" data-number="1.4">
<h3 data-number="1.4" class="anchored" data-anchor-id="发布博客"><span class="header-section-number">1.4</span> 发布博客</h3>
<section id="使用-github-pages-发布" class="level4" data-number="1.4.1">
<h4 data-number="1.4.1" class="anchored" data-anchor-id="使用-github-pages-发布"><span class="header-section-number">1.4.1</span> 使用 <code>github-pages</code> 发布</h4>
<p>网址前缀如：https://《用户名》.github.io 所示的网址就是使用的<code>github-pages</code>。</p>
<ol type="1">
<li><p>首先在 <code>github</code> 新建一个名称为 <code>https://《用户名》.github.io</code> 的仓库。</p></li>
<li><p>设置好仓库的<code>pages</code>选项，如下图所示：</p></li>
</ol>
<p><img src="https://liripo.github.io/posts/quarto_blog/github.png" class="img-fluid"></p>
<ol start="3" type="1">
<li>按照上面的步骤，博客项目下会有<code>_quarto.yml</code> 文件，修改下此文件的输出目录。</li>
</ol>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">project:</span></span>
<span id="cb2-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">type:</span> website</span>
<span id="cb2-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output-dir:</span> docs</span></code></pre></div>
</div>
<ol start="4" type="1">
<li>将 .nojekyll 文件添加到存储库的根目录，告诉 GitHub Pages 不要使用 Jekyll（GitHub 默认站点生成工具）对已发布的站点进行其他处理：</li>
</ol>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>terminal</strong></pre>
</div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> .nojekyll</span></code></pre></div>
</div>
<ol start="5" type="1">
<li>渲染网站并发布</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># quarto 渲染网站</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> render</span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 使用 git 将渲染好的网站发送到刚刚创建好的仓库中</span></span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span></code></pre></div>


</section>
</section>
</section>

 ]]></description>
  <category>quarto</category>
  <guid>https://liripo.github.io/posts/quarto_blog/index.html</guid>
  <pubDate>Mon, 01 Jan 2024 16:00:00 GMT</pubDate>
  <media:content url="https://liripo.github.io/posts/quarto_blog/quarto.png" medium="image" type="image/png" height="72" width="144"/>
</item>
</channel>
</rss>
